select * from users;
select * from companycar;
select * from carinfo;




1. 회원의 이름과 주소를 출력하시오.
-- 이름은 users  주소도 users 테이블에 있다.. 조인필요없음
select name, addr
from users;



2. 회원의 이름과 소유한 자동차 번호를 출력하시오.
-- 이름  users, 자동차 번호 : carinfo  회원이 소유한 자동차 : 이너조인
select u.name, c.c_num
from users u, carinfo c
where u.id=c.id;




3. 자동차 번호가 7788인 소유자의 이름과 주소를 출력하시오.
자동차 번호가 7788은 조건절 where
소유자의 이름과 주소는 users;  문제는 자동차 번호는 carinfo..
1. 조인을 해서 조건절로 7788인 자동차의 소유자의 정보를 출력 > 조인
select u.name, u.addr
from users u, carinfo c
where u.id = c.id and c.c_num='7788';
2. 7788소유자의 회원아이디를 검색 한 후 결과값을 본 쿼리의 조건 > 서브쿼리
select id from carinfo where c_num='7788';
select name,addr
from users
where id=(select id from carinfo where c_num='7788');





4. 자동차를 소유하지 않은 사람의 이름과 주소를 출력하시오.
이름과 주소는 users // 자동차를 소유하지 않은 사람이라는 조건 
        carinfo 테이블을 참조해 봐야.. 이너조인, 아우터조인... 
select u.*, u.*
from users u  --left table
left outer join carinfo c  -- right table // left 테이블에서
on u.id = c.id                -- 이너조인하고 조인에 참여하지 않은 튜플
where c_name is null;
select u.name, u.addr
from users u  --left table
left outer join carinfo c  -- right table // left 테이블에서
on u.id = c.id                -- 이너조인하고 조인에 참여하지 않은 튜플
where c_name is null;

-- left outer join을 다음과 같이 (+)기호로 표시할 수 있다.
select u.name, u.addr
from users u, carinfo c  --left table
where u.id = c.id(+) and c_name is null;
-- right outer join을 다음과 같이 (+)기호로 표시할 수 있다.
select u.name, u.addr
from users u, carinfo c  --right table
where u.id(+) = c.id and c_name is null;





5. 회원별 등록한 자동차 수를 출력하시오.
회원별 집계, users 만 으로는 회원의 자동차를 알 수 없으니
users과 carinfo 테이블을 조인 ... 필요한 조인 .이너조인
이너 조인을 한 후에 회원으로 그룹을 만들고 카운팅 집계를 하자
select u.*, c.*
from users u, carinfo c
where u.id=c.id;

select u.name, count(*)
from users u, carinfo c
where u.id=c.id
group by u.name;   -- 동명이인일 수도 있으니 u.id로 그룹하자

select u.name, count(*)
from users u, carinfo c
where u.id=c.id
group by u.id;   -- 동명이인일 수도 있으니 u.id로 그룹하자 에러
                -- select u.name는 다중행이다..
select u.name, count(*)
from users u, carinfo c
where u.id=c.id
group by (u.id,u.name);   --group by를 복합속성으로 정의하자.






6. 2대 이상을 소유한 회원의 이름과 소유한 자동차 수를 출력하시오.
5번하고 비슷합니다.. 조건이 2대 이상이라는 조건이 추가
조건나왔어요? where 인가요? having 인가요? having이죠
select u.name, count(*)
from users u, carinfo c
where u.id=c.id
group by (u.id,u.name) having count(*) >= 2;   --group by를 복합속성으로 정의하자.





7. 자동차는 등록되어 있는데 소유자가 없는 자동차 번호를 출력하시오.
팁, 먼저 보는 테이블과 나중에 보는 테이블의 순서를 기억..
먼저 보는 테이블은 carinfo, 두번재로 보는 테이블 users
자동차가 등록되어 있는데 소유자가 누구냐? 이너조인
이너조인에 참여하지 못하는 튜플을 원한다...  아우터조인...
아우터 조인일때는 어떤 테이블을 left로 볼 것인가?? 첫번째 left지정
select c.c_num
from carinfo c
left outer join users u
on c.id = u.id
where u.id is null;

select c.c_num
from carinfo c,users u
where c.id = u.id(+) and u.id is null;





8. 배정 자동차의 차번호, 제조사, 자동차명, 가격을 출력하시오.
carinfo 배정 자동차의 정보로 가정... 차번호는 carinfo해결가능하지만
제조사와 자동차명과 가격은 companycar테이블에 있죠. 이너조인
select c.c_num, cc.c_com, cc.c_name, cc.c_price
from carinfo c, companycar cc
where c.c_num = cc.c_num;





9. 회사에서구매는 하였지만 
배정되지 않은 자동차의 차번호, 제조자, 자동차 이름을 출력   
테이블을 보는 순서를 정해 봅시다.
companycar 테이블에 보유한 자동차 정보를 확인, 이 자동차 배정되었는지
확인하기 위해서 carinfo테이블 확인..  배정된 자동차는 이너조인
배정이 안된 자동차는 아우터 조인.. 이때 campanycar를 left
select c.c_num, c.c_com, c.c_name
from companycar c
left outer join carinfo cc
on c.c_num = cc.c_num
where cc.c_num is null;







10. 자동차 가격이 1000만원 이상인 자동차의 자동차 번호를 출력하시오.
 자동차 가격이 1000만원 이상이라는 조건은 companycar 에서 해결가능
 원하는 자동차 번호도 companycar에서 해결가능 즉 조인 필요없음
 select c_name
 from companycar
 where c_price >=1000;








11. 배정된 자동차 중에 회사에서 구매한 자동차가 아닌 자동차 번호를 출력하시오.
관련 테이블은 carinfo   companycar
outer join  >  carinfo 테이블을 left
select c.c_num
from carinfo c
left outer join companycar c1
on c.c_num = c1.c_num
where c1.c_com is null;






12. 모든 사람의 정보를 출력하시오. 이름, 배정받은 자동차번호, 
자동차이름
관련테이블은 users, carinfo, companycar
조인해서 만들고 싶은 테이블은
users.name  carinfo.c_num  companycar.c_name
즉 테이블3개를 조인. 이때는 순서를 정하고 순서대로 2개씩 조인하고
그 결과의 논리테이블과 다음 테이블을 조인 .. 진행
select u.name, NVL(c.c_num,'없음'), NVL(cc.c_name,'없음')
from users u
left outer join carinfo c
on u.id=c.id
left outer join companycar cc
on c.c_num= cc.c_num;








